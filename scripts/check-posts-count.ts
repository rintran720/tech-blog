import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

async function checkPostsCount() {
  try {
    const totalPosts = await prisma.post.count();
    const publishedPosts = await prisma.post.count({
      where: { published: true },
    });
    const unpublishedPosts = await prisma.post.count({
      where: { published: false },
    });

    console.log("üìä Th·ªëng k√™ b√†i vi·∫øt:");
    console.log(`üìù T·ªïng s·ªë b√†i vi·∫øt: ${totalPosts}`);
    console.log(`‚úÖ ƒê√£ xu·∫•t b·∫£n: ${publishedPosts}`);
    console.log(`üìã Ch∆∞a xu·∫•t b·∫£n: ${unpublishedPosts}`);

    // Hi·ªÉn th·ªã m·ªôt s·ªë b√†i vi·∫øt m·ªõi nh·∫•t
    const recentPosts = await prisma.post.findMany({
      where: { published: true },
      orderBy: { createdAt: "desc" },
      take: 5,
      select: {
        title: true,
        createdAt: true,
        hotScore: true,
      },
    });

    console.log("\nüì∞ B√†i vi·∫øt m·ªõi nh·∫•t:");
    recentPosts.forEach((post, index) => {
      console.log(`${index + 1}. ${post.title} (Hot: ${post.hotScore})`);
    });
  } catch (error) {
    console.error("‚ùå L·ªói:", error);
  } finally {
    await prisma.$disconnect();
  }
}

checkPostsCount();
